// GENERATED CODE - DO NOT EDIT
// Generated by schema2code proto generator

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: model_parameters.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Parameters for configuring a language model
type ModelParameters struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Size of the context window
	NumCtx int32 `protobuf:"varint,1,opt,name=num_ctx,json=numCtx,proto3" json:"num_ctx,omitempty"`
	// Number of tokens to consider for repetition penalties
	RepeatLastN int32 `protobuf:"varint,2,opt,name=repeat_last_n,json=repeatLastN,proto3" json:"repeat_last_n,omitempty"`
	// Penalty for repetitions
	RepeatPenalty float64 `protobuf:"fixed64,3,opt,name=repeat_penalty,json=repeatPenalty,proto3" json:"repeat_penalty,omitempty"`
	// Sampling temperature; higher values produce more creative outputs
	Temperature float64 `protobuf:"fixed64,4,opt,name=temperature,proto3" json:"temperature,omitempty"`
	// Random seed for reproducibility
	Seed int32 `protobuf:"varint,5,opt,name=seed,proto3" json:"seed,omitempty"`
	// Sequences where the model should stop generating
	Stop []string `protobuf:"bytes,6,rep,name=stop,proto3" json:"stop,omitempty"`
	// Maximum number of tokens to predict
	NumPredict int32 `protobuf:"varint,7,opt,name=num_predict,json=numPredict,proto3" json:"num_predict,omitempty"`
	// Limits next token selection to top K options
	TopK int32 `protobuf:"varint,8,opt,name=top_k,json=topK,proto3" json:"top_k,omitempty"`
	// Limits next token selection to tokens comprising the top P probability mass (nucleus sampling)
	TopP float64 `protobuf:"fixed64,9,opt,name=top_p,json=topP,proto3" json:"top_p,omitempty"`
	// Minimum probability threshold for token selection
	MinP          float64 `protobuf:"fixed64,10,opt,name=min_p,json=minP,proto3" json:"min_p,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModelParameters) Reset() {
	*x = ModelParameters{}
	mi := &file_model_parameters_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModelParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelParameters) ProtoMessage() {}

func (x *ModelParameters) ProtoReflect() protoreflect.Message {
	mi := &file_model_parameters_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelParameters.ProtoReflect.Descriptor instead.
func (*ModelParameters) Descriptor() ([]byte, []int) {
	return file_model_parameters_proto_rawDescGZIP(), []int{0}
}

func (x *ModelParameters) GetNumCtx() int32 {
	if x != nil {
		return x.NumCtx
	}
	return 0
}

func (x *ModelParameters) GetRepeatLastN() int32 {
	if x != nil {
		return x.RepeatLastN
	}
	return 0
}

func (x *ModelParameters) GetRepeatPenalty() float64 {
	if x != nil {
		return x.RepeatPenalty
	}
	return 0
}

func (x *ModelParameters) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *ModelParameters) GetSeed() int32 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *ModelParameters) GetStop() []string {
	if x != nil {
		return x.Stop
	}
	return nil
}

func (x *ModelParameters) GetNumPredict() int32 {
	if x != nil {
		return x.NumPredict
	}
	return 0
}

func (x *ModelParameters) GetTopK() int32 {
	if x != nil {
		return x.TopK
	}
	return 0
}

func (x *ModelParameters) GetTopP() float64 {
	if x != nil {
		return x.TopP
	}
	return 0
}

func (x *ModelParameters) GetMinP() float64 {
	if x != nil {
		return x.MinP
	}
	return 0
}

var File_model_parameters_proto protoreflect.FileDescriptor

const file_model_parameters_proto_rawDesc = "" +
	"\n" +
	"\x16model_parameters.proto\x12\x05proto\"\x9f\x02\n" +
	"\x0fModelParameters\x12\x17\n" +
	"\anum_ctx\x18\x01 \x01(\x05R\x06numCtx\x12\"\n" +
	"\rrepeat_last_n\x18\x02 \x01(\x05R\vrepeatLastN\x12%\n" +
	"\x0erepeat_penalty\x18\x03 \x01(\x01R\rrepeatPenalty\x12 \n" +
	"\vtemperature\x18\x04 \x01(\x01R\vtemperature\x12\x12\n" +
	"\x04seed\x18\x05 \x01(\x05R\x04seed\x12\x12\n" +
	"\x04stop\x18\x06 \x03(\tR\x04stop\x12\x1f\n" +
	"\vnum_predict\x18\a \x01(\x05R\n" +
	"numPredict\x12\x13\n" +
	"\x05top_k\x18\b \x01(\x05R\x04topK\x12\x13\n" +
	"\x05top_p\x18\t \x01(\x01R\x04topP\x12\x13\n" +
	"\x05min_p\x18\n" +
	" \x01(\x01R\x04minPB\x0fZ\rmaistro/protob\x06proto3"

var (
	file_model_parameters_proto_rawDescOnce sync.Once
	file_model_parameters_proto_rawDescData []byte
)

func file_model_parameters_proto_rawDescGZIP() []byte {
	file_model_parameters_proto_rawDescOnce.Do(func() {
		file_model_parameters_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_model_parameters_proto_rawDesc), len(file_model_parameters_proto_rawDesc)))
	})
	return file_model_parameters_proto_rawDescData
}

var file_model_parameters_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_model_parameters_proto_goTypes = []any{
	(*ModelParameters)(nil), // 0: proto.ModelParameters
}
var file_model_parameters_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_model_parameters_proto_init() }
func file_model_parameters_proto_init() {
	if File_model_parameters_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_model_parameters_proto_rawDesc), len(file_model_parameters_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_model_parameters_proto_goTypes,
		DependencyIndexes: file_model_parameters_proto_depIdxs,
		MessageInfos:      file_model_parameters_proto_msgTypes,
	}.Build()
	File_model_parameters_proto = out.File
	file_model_parameters_proto_goTypes = nil
	file_model_parameters_proto_depIdxs = nil
}
