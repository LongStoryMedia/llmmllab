// GENERATED CODE - DO NOT EDIT
// Generated by schema2code proto generator

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: dev_stats.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Schema representing device memory statistics.
type DevStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Device identifier.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Universally unique identifier for the device.
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// GPU utilization percentage.
	GpuUtil float64 `protobuf:"fixed64,3,opt,name=gpu_util,json=gpuUtil,proto3" json:"gpu_util,omitempty"`
	// Memory utilization percentage.
	MemUtil float64 `protobuf:"fixed64,4,opt,name=mem_util,json=memUtil,proto3" json:"mem_util,omitempty"`
	// Total memory in megabytes.
	MemTotal float64 `protobuf:"fixed64,5,opt,name=mem_total,json=memTotal,proto3" json:"mem_total,omitempty"`
	// Used memory in megabytes.
	MemUsed float64 `protobuf:"fixed64,6,opt,name=mem_used,json=memUsed,proto3" json:"mem_used,omitempty"`
	// Free memory in megabytes.
	MemFree float64 `protobuf:"fixed64,7,opt,name=mem_free,json=memFree,proto3" json:"mem_free,omitempty"`
	// Driver version.
	Driver string `protobuf:"bytes,8,opt,name=driver,proto3" json:"driver,omitempty"`
	// Device name.
	Name string `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	// Device serial number.
	Serial string `protobuf:"bytes,10,opt,name=serial,proto3" json:"serial,omitempty"`
	// Display mode status.
	DisplayMode string `protobuf:"bytes,11,opt,name=display_mode,json=displayMode,proto3" json:"display_mode,omitempty"`
	// Display active status.
	DisplayActive string `protobuf:"bytes,12,opt,name=display_active,json=displayActive,proto3" json:"display_active,omitempty"`
	// Device temperature in Celsius.
	Temperature float64 `protobuf:"fixed64,13,opt,name=temperature,proto3" json:"temperature,omitempty"`
	// Additional properties as key-value pairs
	AdditionalProperties map[string]string `protobuf:"bytes,14,rep,name=additional_properties,json=additionalProperties,proto3" json:"additional_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DevStats) Reset() {
	*x = DevStats{}
	mi := &file_dev_stats_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DevStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevStats) ProtoMessage() {}

func (x *DevStats) ProtoReflect() protoreflect.Message {
	mi := &file_dev_stats_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevStats.ProtoReflect.Descriptor instead.
func (*DevStats) Descriptor() ([]byte, []int) {
	return file_dev_stats_proto_rawDescGZIP(), []int{0}
}

func (x *DevStats) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DevStats) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *DevStats) GetGpuUtil() float64 {
	if x != nil {
		return x.GpuUtil
	}
	return 0
}

func (x *DevStats) GetMemUtil() float64 {
	if x != nil {
		return x.MemUtil
	}
	return 0
}

func (x *DevStats) GetMemTotal() float64 {
	if x != nil {
		return x.MemTotal
	}
	return 0
}

func (x *DevStats) GetMemUsed() float64 {
	if x != nil {
		return x.MemUsed
	}
	return 0
}

func (x *DevStats) GetMemFree() float64 {
	if x != nil {
		return x.MemFree
	}
	return 0
}

func (x *DevStats) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *DevStats) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DevStats) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *DevStats) GetDisplayMode() string {
	if x != nil {
		return x.DisplayMode
	}
	return ""
}

func (x *DevStats) GetDisplayActive() string {
	if x != nil {
		return x.DisplayActive
	}
	return ""
}

func (x *DevStats) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *DevStats) GetAdditionalProperties() map[string]string {
	if x != nil {
		return x.AdditionalProperties
	}
	return nil
}

var File_dev_stats_proto protoreflect.FileDescriptor

const file_dev_stats_proto_rawDesc = "" +
	"\n" +
	"\x0fdev_stats.proto\x12\x05proto\"\x90\x04\n" +
	"\bDevStats\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04uuid\x18\x02 \x01(\tR\x04uuid\x12\x19\n" +
	"\bgpu_util\x18\x03 \x01(\x01R\agpuUtil\x12\x19\n" +
	"\bmem_util\x18\x04 \x01(\x01R\amemUtil\x12\x1b\n" +
	"\tmem_total\x18\x05 \x01(\x01R\bmemTotal\x12\x19\n" +
	"\bmem_used\x18\x06 \x01(\x01R\amemUsed\x12\x19\n" +
	"\bmem_free\x18\a \x01(\x01R\amemFree\x12\x16\n" +
	"\x06driver\x18\b \x01(\tR\x06driver\x12\x12\n" +
	"\x04name\x18\t \x01(\tR\x04name\x12\x16\n" +
	"\x06serial\x18\n" +
	" \x01(\tR\x06serial\x12!\n" +
	"\fdisplay_mode\x18\v \x01(\tR\vdisplayMode\x12%\n" +
	"\x0edisplay_active\x18\f \x01(\tR\rdisplayActive\x12 \n" +
	"\vtemperature\x18\r \x01(\x01R\vtemperature\x12^\n" +
	"\x15additional_properties\x18\x0e \x03(\v2).proto.DevStats.AdditionalPropertiesEntryR\x14additionalProperties\x1aG\n" +
	"\x19AdditionalPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x0fZ\rmaistro/protob\x06proto3"

var (
	file_dev_stats_proto_rawDescOnce sync.Once
	file_dev_stats_proto_rawDescData []byte
)

func file_dev_stats_proto_rawDescGZIP() []byte {
	file_dev_stats_proto_rawDescOnce.Do(func() {
		file_dev_stats_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dev_stats_proto_rawDesc), len(file_dev_stats_proto_rawDesc)))
	})
	return file_dev_stats_proto_rawDescData
}

var file_dev_stats_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_dev_stats_proto_goTypes = []any{
	(*DevStats)(nil), // 0: proto.DevStats
	nil,              // 1: proto.DevStats.AdditionalPropertiesEntry
}
var file_dev_stats_proto_depIdxs = []int32{
	1, // 0: proto.DevStats.additional_properties:type_name -> proto.DevStats.AdditionalPropertiesEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_dev_stats_proto_init() }
func file_dev_stats_proto_init() {
	if File_dev_stats_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dev_stats_proto_rawDesc), len(file_dev_stats_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dev_stats_proto_goTypes,
		DependencyIndexes: file_dev_stats_proto_depIdxs,
		MessageInfos:      file_dev_stats_proto_msgTypes,
	}.Build()
	File_dev_stats_proto = out.File
	file_dev_stats_proto_goTypes = nil
	file_dev_stats_proto_depIdxs = nil
}
