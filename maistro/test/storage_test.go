package test

import (
	"context"
	"log"

	"maistro/config"
	pxcx "maistro/context"
	"maistro/models"
	svc "maistro/services"
	"maistro/storage"
	"maistro/util"
	"slices"
	"testing"

	"github.com/google/uuid"
	"github.com/sirupsen/logrus"
	"github.com/testcontainers/testcontainers-go"
	"github.com/testcontainers/testcontainers-go/modules/postgres"
)

var (
	cid       = 1
	uid       = "test_user"
	title     = "Test Conversation"
	sourceIDs = []int{1, 2, 3, 4, 5}
	content   = `by bundling the inference for both LLMs and image generation into one container (or sidecar) that requests two GPUs, you ensure that model splitting can occur across both devices. This approach meets your requirement while keeping the gRPC interface separate from the inference logic, just as beforeâ€”but now with full multi-GPU utilization available in a single process.`
	level     = 1
	message1  = "What are some strategies for using multiple GPUs?"
	message2  = "You can split the model across GPUs or use a sidecar container to handle inference."
	message3  = "Can a single model leverage VRAM across multiple GPUs?"
	message4  = "Yes, by bundling inference into one container that requests two GPUs, you can utilize VRAM across both devices."
	message5  = "How can I ensure that my LLM and image generation models can run in parallel on multiple GPUs?"
	// embedding  = []float32{0.04154184, 0.06238567, -0.14688519, -0.022470413, 0.05658785, -0.03888742, 0.008145614, -0.009349423, -0.04132698, 0.019686896, 0.0022820898, 0.010348477, -0.0050526643, 0.019719364, 0.003925307, 0.03615719, -0.035422787, -0.021913845, -0.038975995, 0.014208843, -0.07817513, -0.041400045, 0.009003891, -0.025067233, 0.073440894, 0.009199934, 0.014916511, 0.030748818, -0.11204092, 0.04230945, 0.052464355, -0.009968731, 0.0057850354, 0.0017667675, -0.03154174, -0.03610301, 0.03279658, -0.033128574, -0.024506908, -0.0052654585, 0.01123739, -0.03048802, 0.054055367, 0.012788278, 0.040888168, -0.008583356, 0.092745, -0.079724744, 0.032566156, -0.026914928, 0.023600515, 0.05375764, -0.042389568, -0.039201904, 0.015333026, 0.0019863113, -0.05286642, 0.05788404, 0.058888618, -0.039286926, 0.022591008, 0.038574286, -0.029997976, 0.005045652, 0.059411205, 0.009327035, -0.0003313681, -0.017663974, -0.030160066, -0.031502232, 0.03263611, 0.014060236, 0.13179204, -0.019241316, 0.016046425, -0.04087473, 0.02964802, -0.008424911, -0.010370334, 0.052255724, 0.040482704, 0.008988821, 0.09863129, 0.028217765, 0.022549693, -0.0073285312, 0.008521743, -0.03430698, -0.067436814, 0.00790642, 0.0058811777, 0.049406152, 0.05503898, 0.047560483, -0.05189933, 0.011036959, -0.054843165, 0.07960063, -0.034745324, -0.005464264, -0.026406573, -0.028822822, 0.044312272, -0.075490355, 0.024861328, 0.028682616, 0.0038482787, 0.017905518, 0.057183396, 0.008536312, -0.0311695, -0.0065710726, -0.01952295, -0.032891028, 0.04551773, 0.01561957, 0.023526164, -0.029819164, -0.048590075, -0.0013178447, 0.018305853, -0.02974511, -0.015974155, 0.011549771, -0.026821876, -0.02765371, 0.026665699, 0.008148622, 0.06807998, -0.00336378, 0.049621418, -0.04400977, -0.01384729, 0.026028069, -0.030885309, 0.054218523, -0.017057002, 0.0045211622, 0.006595605, 0.006262746, 0.0017005038, -0.043020017, -0.06461407, -0.030032303, 0.027491212, -0.023425043, -0.031000974, -0.048070893, -0.043799512, -0.00091113604, -0.0036728615, 0.043679535, -0.006488288, 0.023232637, 0.03697697, -0.057036445, 0.020111978, -0.028992008, 0.013139533, -0.03556552, 0.032190613, -0.024301898, -0.03282621, 0.07597207, -0.03271945, -0.021112274, -0.028271144, 0.051519167, 0.08420943, 0.013314044, -0.046180572, 0.00233321, -0.0042348523, -0.07029865, 0.042280737, 0.044758413, 0.015301192, 0.0030589674, -0.03634407, 0.019360535, 0.015910521, 0.026474774, 0.0020075329, 0.034282576, 0.046106383, -0.01110081, 0.01929659, -0.03136111, -0.008524688, 0.022685293, 0.03184147, 0.090928644, -0.024711426, -0.039318968, -0.029539574, -0.034794185, 0.053041626, 0.04274122, 0.037616976, -0.019980766, 0.020518122, -0.011307869, -0.0711706, 0.05046771, 0.00887883, 0.0075883935, 0.0027774395, 0.0778406, 0.011827891, 0.0077600307, 0.03290608, 0.012600752, -0.03937173, -0.0055409246, -0.022757713, -0.0151998, 0.03786917, -0.06288132, -0.0027265889, 0.0041855485, 0.0032770026, 0.034835204, 0.03129585, -0.044228364, 0.06699052, -0.068574995, -0.024576692, -0.0060298294, -0.034600135, -0.024061285, -0.04379826, -0.01868761, 0.052680418, -0.0070900456, 0.011718568, 0.037978984, -0.04245402, 0.07904158, -0.07430624, 0.0019676755, 0.030749438, 0.053670608, 0.005658521, -0.0009172927, -0.040456116, 0.050987594, 0.010258197, -0.024054646, -0.02610516, 0.025880098, -0.012163452, -0.040126015, -0.023349918, 0.03087598, -0.0069799926, -0.02041088, -0.015765497, -0.020029038, -0.009091758, -0.011284061, 0.019345656, 0.0064071207, 0.037849113, 0.00830957, -0.036222056, -0.049039844, 0.06892698, -0.0406842, 0.025878841, -0.013227687, -0.032290813, 0.04648787, 0.018834943, 0.037289754, -0.020470306, -0.020506684, 0.035335697, -0.016804446, -0.024068147, 0.0450906, -0.0070115994, -0.031178508, -0.09031297, -0.022248998, 0.024995377, -0.006421385, 0.09924237, 0.009717621, -0.0025163689, 0.04233167, 0.026121879, 0.008870043, 0.018911704, -0.032899145, -0.007569432, -0.0049086707, 0.00939583, 0.034765247, 0.024695981, -0.04885607, -0.029740248, -0.039445452, 0.03147509, 0.046982754, -0.038093142, -0.028852742, 0.042256452, 0.017612096, 0.03847407, -0.033269536, -0.0075943763, -0.025526036, 0.07488601, 0.019701267, 0.012787561, -0.067366645, 0.008420151, -0.024469381, -0.00057762593, -0.023157105, -0.028530478, -0.0074876286, -0.0059344657, -0.042250782, -0.04372728, 0.05880714, -0.011924535, -0.022722444, 0.012963441, 0.038488448, -0.05274089, 0.015759172, -0.02408388, -0.010567035, -0.013960691, 0.0070895543, 0.017725008, -0.04398829, 0.019583093, 0.014459257, 0.026223125, -0.020428821, -0.017497063, -0.047576036, -0.031550996, -0.0022810653, 0.024428392, -0.013385985, 0.04972473, -0.023620887, -0.06434925, 0.007219089, 0.013564336, -0.005791623, 0.009104861, -0.07599224, 0.050314557, 0.01348239, 0.015733605, -0.006345254, 0.004671569, -0.02746967, 0.005493296, 0.022933502, 0.012901187, -0.031249367, 0.015155311, 0.026311468, 0.022838183, -0.006012435, 0.023679549, -0.06511489, -0.033728596, -0.004168607, -0.014697536, -0.01269949, -0.0654196, -0.062243827, 0.028096797, 0.038788646, 0.0073287203, 0.004883579, 0.013704369, 0.0027106027, -0.016863529, 0.026684552, 0.0066249347, -0.008850741, 0.01483929, 0.026087847, -0.00036760906, -0.087127306, -0.103562854, 0.0148368925, -0.015674492, -0.03386212, -0.015073574, -0.018626416, -0.06363337, 0.014954571, -0.051679112, -0.036300883, 0.051085226, -0.0495524, -0.011017058, 0.023647837, 0.0064187488, -0.03592531, 0.05583246, 0.03805092, 0.00858918, -0.0026539357, -0.010939129, -0.021062152, 0.040224116, 0.026730074, 0.041775186, 0.023529818, -0.015232248, -0.011544549, 0.01245626, 0.013495274, -0.033092637, -0.00091925455, -0.022569828, 0.033795398, 0.037374426, 0.01106069, -0.029216433, -0.030709412, -0.034816436, 0.020545635, 0.018353278, -0.04323624, -0.025086595, -0.03085816, 0.048606135, -0.013418383, -0.013117367, 0.032848895, 0.06831691, -0.007976268, -0.025146473, 0.001368582, 0.07642266, 0.05779241, 0.043393888, -0.078640446, -0.02010005, -0.0054584863, -0.010343061, -0.024473459, -0.045106992, 0.035578348, 0.04667071, 0.006775968, -0.0072082407, 0.026213396, 0.073757805, 0.036117498, 0.013421864, 0.038688842, -0.04276975, -0.0037100383, 0.027273066, -0.031239314, -0.044876408, -0.023493044, 0.079476304, 0.042635027, -0.00487691, 0.017606338, -0.014961779, 0.021473985, -0.0045877164, -0.04919107, -0.015157362, -0.009095846, 0.03001017, 0.00026966262, 0.018227749, 0.02850035, 0.03930945, -0.049188685, 0.025815314, 0.07915523, 0.028741132, -0.046418853, 0.028519081, 0.012149966, -0.0026259744, 0.043801144, 0.011994602, 0.008700819, 0.04054324, -0.026993787, 0.026990658, -0.02701165, -0.01021876, -0.025922013, 0.06943065, 0.058262866, 0.0060563735, -0.028202781, 0.036861934, -0.056358863, 0.01457172, -0.06647148, -0.032398336, 0.0060343663, -0.03374778, -0.03665545, 0.07769261, 0.014262949, 0.009011509, -0.056308668, 0.011511014, -0.04453496, -0.010267526, -0.05064547, -0.010462253, -0.100259386, -0.060590714, 0.030626005, -0.04819323, 0.016182141, -0.0017022223, -0.048222154, 0.025584394, 0.022727314, -0.0027576885, 0.0030651304, -0.04319253, 0.014062777, -0.0063697514, -0.07254969, -0.05304468, -0.024361338, 0.034418818, 0.0027819625, 0.023639588, 0.009673293, 0.038218156, -0.00094852777, -0.006671196, -0.006387411, -0.061252505, 0.028828364, 0.024063136, -0.022190787, 0.051336315, -0.006043933, 0.048144426, -0.060190175, 0.10218995, -0.03494922, -0.034564015, -0.07910811, 0.016817078, 0.019626, -0.008614927, -0.011091966, 0.0071315677, -0.014224153, -0.0069486676, -0.057986315, 0.023947759, 0.010461236, 0.022010026, -0.012742441, 0.025615666, -0.050847232, 0.027690884, -0.0064746523, 0.031766303, 0.010367205, -0.009364445, 0.037647814, -0.013370689, -0.019533444, -0.03111262, 0.016997878, 0.004925457, 0.046144668, -0.03791811, 0.06463878, -0.0072370498, -0.016377464, -0.0029894495, -0.019342156, 0.03620774, -0.055907752, -0.021202827, -0.010818221, -0.022362903, 0.059888836, -0.055896237, 0.009625139, 0.026397686, -0.043305308, 0.01966109, 0.03712557, 0.030542562, -0.058440074, -0.029746052, 0.04484722, 0.005118798, -0.0039677094, 0.0133835785, -0.024560336, -0.029687114, -0.023985948, -0.0090138195, -0.0059714695, 0.025810694, 0.0153605025, 0.005394976, -0.005881284, 0.009040756, -0.06928264, -0.01088617, -0.019372232, 0.018270783, -0.036519863, 0.05859779, 0.007861856, -0.052538857, -0.072460696, 0.06666854, 0.043334782, 0.030265033, 0.013483181, -0.023770422, -0.021435784, -0.008557837, 0.049219403, -0.019453557, 0.018326316, 0.011171134, 0.06418779, 0.050948635, 0.021234393, 0.0058074044, 0.0049671065, 0.047072664, 0.011856813, 0.008313375, 0.024756847, 0.047893323, 0.013576977, 0.046965264, 0.049052984, 0.033863433, 0.07240623, -0.06757068, -0.020820465, 0.037318677, -0.064543724, -0.054370075, 0.011052332, -0.065443315, -0.036036476, -0.029759122, 0.013423626, 0.011550611, -0.015861321, 0.022195207, 0.004472839, -0.07223277, -0.071200125, -0.03317063, 0.011213806, -0.06395334, 0.030511716, 0.01096006, -0.017713096, 0.039001748, 0.007168822, -0.029915104, -0.023840463, -0.011691328, 0.007069326, 0.008438272, -0.015560137, -0.0069379336, -0.014756101, 0.009100106, 0.029110983, 0.010641476, -0.03449936, -0.028685926, -0.037582148, 0.04331647, 0.027704034, -0.041628767, 0.047733873, 0.0005823632, 0.0042718425, -0.0016757154, 0.07256496, -0.013093725, 0.01110698, 0.06477923, 0.015676953, -0.03719566, -0.014350642, 0.010244142, 0.007122213, 0.061524052, -0.028362513, -0.041958362, 0.034052193, -0.017056745, 0.015500476, 0.019099426, -0.014394394, -0.032572832, -0.022023287, 0.020799486, 0.023963105, 0.037543852, -0.030984454, -0.045071196, -0.008855286, -0.006540852, -0.04252325, 0.03468068, -0.015781946, 0.038205225, -0.00097556424, 0.0029770045, 0.0316068, 0.0078123435, 0.05019991, 0.016770862, 0.007513292, -0.022779403, -0.033089306, -0.016011976, -0.0095143, -0.046951275, -0.009470366, -0.070046455, -0.00042757503, 0.011779893, -0.03701158, -0.017170735, 0.033636384, 0.072698586, -0.022719277, -0.011100203, -0.04163512, -0.013371857, -0.013133541, 0.020455733, -0.00043179092, 0.066316634, 0.034964535, 0.039303478, 0.00566086, -0.014827415, 0.005050882, 0.009682072, 0.058311973, -0.0029232327, -0.0069719944, -0.011172753, -0.014498613}
	threshold  = float32(0.7)
	limit      = 10
	ctx        = context.Background()
	userConfig = models.UserConfig{
		Memory: &models.MemoryConfig{
			Limit:                   3,
			Enabled:                 true,
			AlwaysRetrieve:          true,
			EnableCrossUser:         false,
			SimilarityThreshold:     0.6,
			EnableCrossConversation: true,
		},
		UserID: "test_user",
		Refinement: &models.RefinementConfig{
			EnableResponseCritique:  false,
			EnableResponseFiltering: false,
		},
		WebSearch: &models.WebSearchConfig{
			Enabled:        true,
			AutoDetect:     true,
			MaxResults:     3,
			IncludeResults: true,
		},
		Summarization: &models.SummarizationConfig{
			Enabled:                      true,
			MaxSummaryLevels:             3,
			EmbeddingDimension:           786,
			MessagesBeforeSummary:        4,
			SummaryWeightCoefficient:     0.5,
			SummariesBeforeConsolidation: 3,
		},
		ModelProfiles: &models.ModelProfileConfig{
			PrimaryProfileID:               uuid.MustParse("00000000-0000-0000-0000-000000000001"),
			AnalysisProfileID:              uuid.MustParse("00000000-0000-0000-0000-000000000009"),
			EmbeddingProfileID:             uuid.MustParse("00000000-0000-0000-0000-000000000014"),
			FormattingProfileID:            uuid.MustParse("00000000-0000-0000-0000-000000000015"),
			KeyPointsProfileID:             uuid.MustParse("00000000-0000-0000-0000-000000000005"),
			ImprovementProfileID:           uuid.MustParse("00000000-0000-0000-0000-000000000007"),
			BriefSummaryProfileID:          uuid.MustParse("00000000-0000-0000-0000-000000000004"),
			ResearchPlanProfileID:          uuid.MustParse("00000000-0000-0000-0000-000000000011"),
			ResearchTaskProfileID:          uuid.MustParse("00000000-0000-0000-0000-000000000010"),
			SelfCritiqueProfileID:          uuid.MustParse("00000000-0000-0000-0000-000000000006"),
			SummarizationProfileID:         uuid.MustParse("00000000-0000-0000-0000-000000000002"),
			MasterSummaryProfileID:         uuid.MustParse("00000000-0000-0000-0000-000000000003"),
			ImageGenerationProfileID:       uuid.MustParse("00000000-0000-0000-0000-000000000016"),
			MemoryRetrievalProfileID:       uuid.MustParse("00000000-0000-0000-0000-000000000008"),
			ResearchAnalysisProfileID:      uuid.MustParse("00000000-0000-0000-0000-000000000013"),
			ResearchConsolidationProfileID: uuid.MustParse("00000000-0000-0000-0000-000000000012"),
			ImageGenerationPromptProfileID: uuid.MustParse("00000000-0000-0000-0000-000000000017"),
		},
		ImageGeneration: &models.ImageGenerationConfig{
			Enabled:              true,
			MaxImageSize:         1280,
			RetentionHours:       1,
			StorageDirectory:     "/root/images",
			AutoPromptRefinement: false,
		},
	}
)

func DbTest(t *testing.T, tests ...TestFunc) {
	confFile := "testdata/.config.yaml"
	ctx := context.Background()

	pgc, err := postgres.Run(ctx,
		"timescale/timescaledb-ha:pg17",
		postgres.WithInitScripts("testdata/init_test_db.sh"),
		postgres.BasicWaitStrategies(),
	)
	if err != nil {
		panic(err)
	}
	defer func() {
		if err := testcontainers.TerminateContainer(pgc); err != nil {
			log.Printf("failed to terminate container: %s", err)
		}
	}()

	config.GetConfig(&confFile) // Load the configuration from the specified file

	psqlconn, err := pgc.ConnectionString(ctx)
	if err != nil {
		panic("failed to get connection string")
	}

	storage.InitializeStorage()

	if err := storage.InitDB(psqlconn); err != nil {
		util.HandleError(err)
	}
	util.LogInfo("Connected to PostgreSQL database", logrus.Fields{
		"connection": psqlconn,
	})

	cc, err := pxcx.GetCachedConversation(uid, cid)
	if err != nil {
		t.Fatalf("Failed to get cached conversation: %v", err)
	}

	storage.UserConfigStoreInstance.UpdateUserConfig(ctx, uid, &userConfig)

	storage.ConversationStoreInstance.CreateConversation(ctx, uid, title)
	cc.AddUserMessage(ctx, message1)
	cc.AddAssistantMessage(ctx, message2)
	cc.AddUserMessage(ctx, message3)
	cc.AddAssistantMessage(ctx, message4)
	cc.AddUserMessage(ctx, message5)

	for _, test := range tests {
		t.Run("DbTest", func(tt *testing.T) {
			test(tt)
		})
	}
}

// nomic-embed:latest -0.009269069,0.053949308,-0.17490692,0.008940315,0.071437694,-0.03300192,0.0005872408,-0.053989377,-0.018771276,0.022587175,0.011937841,0.036081057,0.016709488,0.023519322,-0.020029249,0.047862235,-0.025275249,-0.012244972,-0.0027073314,-0.041184675,-0.07685989,-0.076204725,-0.029027598,-0.011072151,0.011808919,0.057849117,0.021797469,0.005736544,-0.03323833,0.020581828,0.09011771,-0.041819826,0.027467638,-0.090339996,-0.04249215,-0.014515457,-0.0024920846,0.007857372,0.012200733,0.023987284,0.038496766,-0.043089367,0.005278434,-0.010477896,0.052854024,0.0037850451,0.08130354,-0.027058197,0.06628594,0.004580275,0.050547637,0.034624968,-0.035052687,-0.027448086,0.047522597,-0.0025321539,-0.041723907,0.09164185,0.026589934,0.00011651692,-0.0007292245,0.048170466,-0.011080931,0.077823,0.043210275,-0.010549237,-0.010156215,-0.008905571,-0.04066151,-0.0625144,0.033642616,0.008674065,0.049690325,-0.020039376,-0.024229875,0.0147412,0.005636088,-0.050146386,-0.043880884,0.01863811,0.039778307,0.040299695,0.057253756,0.04817899,0.080241695,0.0034093808,-0.020904288,-0.0059294347,-0.05137181,0.07411229,-0.0012350929,0.04101151,0.037141226,0.032177594,-0.03988054,-0.012430211,-0.037097163,0.030148325,-0.031873934,0.01407939,-0.021419633,-0.022237381,0.045409095,-0.040738553,-0.033492737,0.051132564,-0.019584926,0.03150299,0.0828003,-0.03330971,-0.04903494,-0.032632463,-0.030962016,-0.04384486,-0.032710858,-0.007826739,0.013130752,0.004758898,-0.05375021,-0.0060237306,-0.01565445,-0.039046183,-0.018127868,0.041583054,-0.019461488,0.055242155,-0.036104366,0.029568268,0.035408776,0.016147299,0.012005328,-0.011772664,-0.004573939,0.003325761,0.03948293,0.034396976,-0.033074073,0.005880132,0.024242159,0.034114704,-0.010062428,-0.04171224,-0.050474863,-0.03703079,0.01902282,-0.049849443,0.028298933,0.006032439,-0.03105101,-0.0076817037,-0.025826728,0.053541444,-0.016579743,0.047235653,0.024740815,-0.030048883,-0.02054839,-0.048500575,0.02038566,-0.054989815,0.03340618,-0.02591005,-0.0026438835,0.0049082134,-0.037196,-0.10679524,0.02242666,0.033120293,0.049459763,0.031240644,-0.042144097,-0.034619678,-0.013489908,-0.05122899,0.08487474,-0.020438556,0.010096392,-0.0013855811,0.0033720515,-0.015434616,0.012982333,-0.054328002,-0.04449923,-0.017930223,-0.009637499,0.010386547,0.001124945,-0.031394936,-0.023639899,-0.010733601,-0.016080327,0.041815486,-0.029779041,-0.029684598,-0.018591972,-0.03375754,0.05973631,0.0035007682,0.036991037,0.0038960802,-0.056606833,-0.01043081,-0.018657941,0.045601737,0.0016054363,0.028038999,0.0059005152,0.031121552,0.027318457,-0.017375903,0.039262738,0.009041897,-0.036463525,0.010133733,0.007269723,-0.031201039,0.02778309,-0.04565109,-0.047046535,0.015901627,-0.0064492906,0.026400823,0.028933449,-0.018916028,0.0064789797,-0.05207039,-0.025557108,0.011058376,-0.027543731,0.021626329,-5.380707e-7,-0.041608967,0.036254235,0.0018912853,0.018970547,0.028698696,-0.009017066,0.076856926,-0.04026354,0.013359185,0.022843683,0.009349983,-0.016916348,-0.050608557,-0.06258533,-0.0030029158,-0.037135515,-0.013113214,0.04575043,0.047211837,-0.021221936,-0.0018388736,0.024529563,0.024709973,0.0003914848,-0.0032234755,-0.0042341477,-0.052703228,0.0240265,0.031655494,-0.0091216415,0.013159361,0.008487914,0.031696204,-0.014489754,-0.020325564,0.04433089,-0.023811823,-0.008684958,-0.015155711,0.035296086,0.05733016,-0.013736064,0.039811213,-0.019890584,0.0031451052,-0.006890532,-0.0076104724,-0.0054043727,0.013711962,-0.06978031,-0.0651307,-0.066447645,-0.044619646,0.01701113,0.016889222,0.03899791,0.01303796,-0.0043990794,0.06510522,-0.021873355,0.04458939,0.029671164,0.0070667956,-0.029079491,-0.0049661123,0.028520783,0.0065468964,0.040250786,0.0013610469,-0.012498534,-0.024828058,0.01830687,0.051079743,-0.0148517545,-0.022641882,0.013125168,0.020564988,0.05070088,-0.006375046,0.0019922648,-0.016754923,0.011833202,0.0033538577,-0.04227091,-0.045202717,-0.003984328,-0.024232855,-0.007851574,0.0064851097,-0.034961835,0.0109988265,-0.014557718,-0.051165245,0.033742066,0.08497272,-0.005872045,-0.0225177,0.007756533,0.03358333,0.003016281,0.014578418,0.03481197,-0.029859798,-0.011462573,0.007846032,-0.0133914305,0.015300927,0.017003223,0.030191943,-0.033090204,0.006098346,0.06174256,-0.039431833,-0.029450612,0.020397156,-0.04618535,-0.0036078768,0.08244696,0.008803548,-0.051778045,-0.010556814,0.0050813532,0.04980518,0.019068616,-0.023566049,0.025272828,0.06213597,-0.00435424,0.025558997,0.040233493,0.022164622,0.036044486,-0.045851395,0.004260865,-0.026346812,0.06631246,0.006380573,0.072106756,0.007080881,-0.018537741,0.0096702045,-0.03545629,0.03044357,0.033008922,0.014869431,-0.039603375,-0.05117271,-0.05785215,0.050572053,0.022036307,-0.0034596832,-0.0061868173,-0.0036254146,0.0044661188,0.031046426,0.017844507,-0.032182526,0.017702902,-0.0129288575,-0.045388993,-0.049390793,-0.077038586,0.017721625,0.00614788,-0.071207285,0.033597846,-0.054810654,-0.002740522,0.03786167,-0.021212267,-0.021020565,0.038799115,-0.038208745,-0.022468396,-0.014494856,0.007719891,-0.04622756,-0.012517281,0.021891441,0.011839392,0.01701072,-0.0005202446,-0.059833817,0.054504078,0.08343618,0.027206777,0.03876754,-0.029185679,0.0056177434,0.034340058,0.03084024,0.019018171,-0.0009426547,0.046787027,0.032784477,0.03213317,0.012656452,-0.031785373,-0.08186345,0.006622106,0.024769299,0.027292287,0.007563952,-0.011376343,-0.025027202,0.014863882,0.03119893,0.0015073973,0.025491405,0.041120097,-0.037318114,-0.032214582,-0.026418839,0.039697696,0.052194096,0.028684754,-0.027922798,-0.06736459,0.01573136,-0.03184582,-0.009249617,-0.024513237,-0.00009787097,0.07595249,-0.026499555,-0.015615041,0.03520301,0.108011246,0.008918308,-0.009757916,0.04876034,-0.06840605,0.04080161,0.027221527,-0.060831096,-0.04182996,-0.0041981186,0.01124665,0.026226444,0.0013162015,0.008881075,0.018787054,0.06266407,0.02776186,-0.071528025,-0.0042264867,-0.018202383,0.04870972,-0.036326412,-0.006681285,0.027145488,0.008748093,-0.022950606,0.03155665,0.069245845,0.007924079,0.02911521,-0.016980216,0.045839068,0.027746059,0.03908564,-0.009833677,0.028560212,-0.017901236,-0.009863242,0.009170627,0.008175757,-0.026702471,-0.008237855,0.0738435,0.057716146,0.060846806,-0.050545726,0.014641601,-0.01792242,-0.011015593,-0.08194402,-0.019019227,-0.009395728,-0.056423202,-0.026722306,-0.037447173,-0.00083151384,0.05457178,-0.089523725,-0.011742952,-0.03661668,-0.028485237,-0.01904426,-0.025604572,-0.09835629,-0.010827362,0.012404799,-0.06514713,0.04630842,0.022234967,-0.022307184,0.01787185,-0.016271908,0.057908557,0.038652483,-0.04744283,0.04993866,0.024038713,-0.004197504,-0.012081942,0.052056465,0.0193693,0.013465129,-0.011185428,-0.015773434,0.07071097,0.06095645,0.029859137,-0.008383384,-0.0647486,0.04097046,0.030436326,-0.055507943,0.05249266,-0.057710968,-0.053884476,-0.009318728,0.062554896,-0.061069563,-0.06012354,-0.09440864,-0.0021163258,0.022108056,0.04190975,0.017115055,0.08205299,-0.036037832,-0.027814189,0.015252074,0.017617958,0.03679504,0.059687648,-0.012413859,0.006543129,-0.05739583,0.022717465,-0.005264022,0.012308799,0.012294521,0.019246373,-0.003882675,-0.028607652,-0.013008368,-0.032617293,-0.055017494,0.040309034,0.026874792,0.01569919,0.05371589,-0.0021032575,-0.04688405,-0.0050722137,0.013184344,-0.0011398912,-0.042530052,0.020541195,-0.02137072,-0.010225753,0.025538651,-0.045056377,0.01441953,-0.043792315,-0.03434993,0.041089967,0.022919152,0.045349162,-0.044404343,-0.025548885,0.04507333,-0.022131104,-0.025492154,-0.00532754,-0.019294355,-0.023720391,-0.010055506,0.009936225,-0.018387655,0.029816585,-0.02930067,0.03223552,-0.013755834,-0.040278185,-0.046553362,0.009753448,-0.012349691,0.004533804,-0.039144672,-0.009540799,-0.030808957,-0.06292958,-0.022993302,0.044622988,0.06765072,-0.01645532,-0.007371896,-0.043408,-0.022643376,-0.02675974,0.041292086,-0.01040832,-0.015561765,-0.0053149303,0.006344763,0.047642168,0.0075097987,-0.03221204,0.049894437,0.047950998,-0.026502972,0.038222,0.010313818,0.04130294,0.0049758153,0.0667128,0.06959351,-0.032770373,0.026580554,-0.05907455,-0.03559677,-0.014244187,-0.021453552,-0.053051863,0.024504576,-0.032962643,-0.0044356314,0.010683958,0.01091897,0.024219833,-0.0051069916,-0.013257993,-0.040572144,-0.029846083,-0.040274423,0.013747488,0.018374931,-0.022443455,0.00720377,0.020717569,-0.03565702,0.0065154247,0.053373296,-0.00849832,-0.0050824555,0.01978209,0.0034233697,0.03788797,0.0063862926,-0.014265944,-0.008323529,0.06255981,-0.007425104,-0.01575529,-0.06235392,-0.030416872,-0.06809947,-0.0012201468,0.035747584,-0.061793886,0.070354685,0.007990328,0.036967527,-0.04165023,0.075076945,-0.032307487,0.04792622,0.029293293,0.033209205,-0.02308375,-0.011992803,-0.0052144118,-0.0033855287,0.054298133,-0.046811078,-0.04884223,0.028221268,-0.014801749,0.034274943,0.024354188,-0.004910715,-0.046810813,-0.037708968,-0.010378199,0.035737205,0.021843985,-0.040639065,-0.05423941,0.021714447,0.03010487,-0.064528376,0.017117746,-0.048676483,0.015745725,-0.024710063,-0.035130806,-0.037272137,-0.015564363,0.013107901,0.00034908453,0.021791171,-0.015975658,-0.024322297,-0.053493846,0.0035417213,-0.081876256,-0.016786994,-0.040412568,0.040409174,-0.009591636,0.026712274,-0.03154292,0.010500364,0.0102229575,-0.0004329097,-0.026762996,-0.03732655,-0.0028991117,0.01984707,0.051469024,-0.002853133,0.022122862,0.03712085,0.08274975,0.03632529,0.0008124194,-0.010454675,0.00048469918,0.03500315,-0.0053072814,-0.043519393,-0.0082955435,0.01916856
// granite-embedding:30m -0.051640797,-0.0007101325,-0.0017567412,0.010135366,-0.052940067,0.016636822,-0.055661574,-0.012976167,0.05954965,0.0342397,-0.028699905,-0.0018289943,0.01163161,-0.034397297,-0.025130356,0.02593234,-0.039128736,-0.00013002745,-0.013078162,0.041324496,0.014495378,-0.041356795,0.021969274,0.026329884,-0.014364555,-0.01823818,-0.0072693154,-0.06715487,-0.007628234,-0.10526161,0.033067334,0.056112815,0.0053594867,-0.031337947,0.0011529241,-0.13407628,0.008173377,-0.0019228143,0.02462847,0.06567275,-0.054082714,0.06734643,0.015429534,0.1263714,0.108148895,0.01139802,-0.03760218,0.058695458,0.060532246,0.022428174,0.031621072,-0.09139366,-0.026543526,0.022463258,-0.043428004,-0.07090184,-0.0036376934,-0.029362306,-0.042061504,-0.00411834,-0.044643518,0.01980397,-0.040912047,0.0034631488,-0.025816193,-0.052517846,0.122763924,-0.02427976,-0.019897742,-0.0198026,-0.000002551278,-0.011874649,0.014183891,-0.10372859,0.016830744,-0.03818189,0.039065823,-0.05198534,-0.048162386,-0.0057782326,-0.097732805,-0.008344708,-0.04791256,0.019565357,-0.017821163,0.0144149,-0.00027473876,0.12313005,0.02501984,0.040460307,-0.006119954,-0.0458534,0.067960136,-0.050908428,0.00022750173,-0.032453854,-0.20372072,-0.029342998,-0.19384803,-0.0030584217,-0.11177715,-0.003499725,-0.01493716,-0.08186605,-0.0029528653,0.094935596,0.027266927,0.047480296,-0.014525329,-0.03914775,-0.0037917988,0.04305509,-0.056197222,0.024650179,-0.014716604,0.033501945,0.09543754,-0.028101303,-0.121358365,0.0021562416,0.0024072877,-0.0013168346,0.039389085,-0.03342615,0.07955813,-0.03633945,0.05463113,0.006725787,0.0083880825,-0.042634968,0.024802946,0.044742055,0.052017666,-0.028574659,0.003161874,-0.054330245,-0.01573876,0.048127476,0.0753601,0.017977001,-0.03769994,-0.04427346,0.0045530414,-0.05194424,-0.021939391,-0.06263228,0.03702044,-0.001628998,-0.009512517,0.056028187,0.026259214,-0.040341143,-0.04550595,0.044010576,0.12043486,-0.02160171,0.016503908,0.09476499,-0.049639057,-0.04005584,0.016400725,0.05386804,-0.068864085,0.10928026,0.01211414,0.0035714735,-0.047364827,-0.011083481,0.035186864,0.012606205,0.013802954,0.0044930074,-0.018129213,-0.1013921,0.008981164,0.041541286,-0.023663549,-0.016713701,-0.03175275,-0.038630802,-0.030899903,0.066498265,-0.067860365,0.0067463038,-0.07576854,-0.0069881915,0.037580468,0.0019178482,0.052714463,-0.0124228615,0.10340936,0.07953252,0.046334404,-0.014766798,0.14831099,-0.051230185,-0.06381843,0.023786686,0.0146301,-0.06342175,0.051678725,-0.031747915,0.15574811,-0.06391427,-0.04166015,0.04222094,0.0019163142,0.0013640795,-0.02296558,-0.08104082,0.013927075,0.039271463,-0.015318079,-0.00605499,0.025251286,-0.02390932,-0.036984626,-0.009663632,-0.012194365,0.002966744,-0.00544152,0.022442063,0.033887792,0.08475421,-0.0072772657,0.012626825,-0.028908074,0.0059686988,0.023628013,-0.025019934,-0.013485494,-0.017080273,-0.08075067,-0.106229775,-0.026095655,0.038398933,-0.10947738,0.020092983,0.016623793,-0.0052160923,0.039223853,0.027529202,0.012794249,0.151907,0.0225542,0.08822768,0.0320292,-0.030531954,0.018094633,-0.02667319,0.02271129,-0.0073930086,-0.003103314,0.0051100645,0.0074146194,-0.033417635,-0.0055726687,-0.03522428,0.011195073,0.012272414,0.0065779546,-0.05664858,0.06339899,0.07916321,0.024245566,0.078388914,0.0016679247,0.029923834,0.014568059,-0.016730508,-0.041056853,0.019371416,-0.025084069,0.05226285,0.045911014,0.042450666,0.042185806,-0.09345112,0.024652064,-0.001738267,0.038196668,0.002347245,0.033661317,-0.057551302,-0.05805187,0.0027974646,-0.028634017,-0.027654838,-0.058774676,-0.016035803,0.009763569,-0.05636315,0.003049999,-0.15306035,0.059304982,0.14822885,-0.02399482,-0.10833033,0.036910135,-0.016306795,-0.011903496,-0.03263919,0.049811188,0.04647964,-0.017591415,0.04749253,-0.046002146,-0.04860124,-0.005111479,0.0048895716,-0.028478002,0.023335474,-0.0135873845,-0.06948966,-0.020151287,-0.06844328,0.026275776,-0.021378193,-0.04613871,-0.019555964,-0.03966496,-0.010284089,0.05532268,-0.013708554,0.09408489,-0.07196357,-0.022188252,0.0046920828,0.024758894,-0.0030799138,-0.091672935,0.00093616056,0.09730444,-0.024785403,0.10851955,0.033938795,-0.019289061,0.074703656,-0.00029044363,-0.0017395744,-0.036803138,-0.05871268,-0.05331944,0.056950394,0.0118629495,0.013644368,-0.0232333,0.007360885,-0.02213814,0.015194773,0.01037678,-0.072285496,-0.03301317,0.022896683,-0.10039561,-0.03696148,-0.06261308,0.028524457,-0.059114024,-0.018286789,-0.0003442166,0.051053055,-0.0128526995,-0.04380948,-0.07377711,0.005314474,-0.092213735,-0.11947168,-0.006346494,-0.016948111,0.031602267,-0.037276726,0.025273614,-0.0028841842,0.08722792,-0.014757666,-0.01581901,-0.067476936,0.019801354,-0.083148606,0.0071453247,-0.059123546,-0.053554825,0.022500098
func Test_Storage(t *testing.T) {
	DbTest(t,
		func(tt *testing.T) {
			config.GetConfig(util.StrPtr("testdata/.config.yaml"))
			embeddings, err := svc.GetInferenceService().GetEmbedding(ctx, "can a single model leverage VRAM across multiple GPUs?", &config.DefaultEmbeddingProfile, uid, cid)
			if err != nil {
				tt.Fatalf("Expected no error, got %v", err)
			}

			results, err := storage.MemoryStoreInstance.SearchSimilarity(ctx, embeddings, threshold, limit, nil, nil, nil, nil)
			if err != nil {
				tt.Fatalf("Expected no error, got %v", err)
			}

			if results == nil {
				tt.Fatal("Expected results, got nil")
			}

			if len(results) == 0 {
				tt.Fatal("Expected results, got empty slice")
			}

			for _, msg := range results {
				if len(msg.Fragments) != 2 {
					tt.Errorf("Expected 2 fragments, got %d for message ID %d", len(msg.Fragments), msg.SourceID)
				}
			}
		},
		func(tt *testing.T) {
			// Save the summary to the database
			id, err := storage.SummaryStoreInstance.CreateSummary(ctx, cid, content, level, sourceIDs)
			if err != nil {
				tt.Fatalf("Failed to create summary: %v", err)
			}

			// Retrieve the summary from the database
			retrievedSummary, err := storage.SummaryStoreInstance.GetSummary(ctx, id)
			if err != nil {
				tt.Fatalf("Failed to retrieve summary: %v", err)
			}

			// Check if the retrieved summary matches the original
			if retrievedSummary.Content != content {
				tt.Errorf("Expected text '%s', got '%s'", content, retrievedSummary.Content)
			}

			if retrievedSummary.SourceIds == nil || len(retrievedSummary.SourceIds) != len(sourceIDs) {
				tt.Errorf("Expected source IDs %v, got %v", sourceIDs, retrievedSummary.SourceIds)
			}
			for i, id := range retrievedSummary.SourceIds {
				if slices.Contains(sourceIDs, id) {
					continue
				}
				tt.Errorf("Expected source ID %d at index %d, but it was not found in %v", id, i, sourceIDs)
			}
		},
		func(tt *testing.T) {
			messages, err := storage.MessageStoreInstance.GetConversationHistory(ctx, cid)
			if err != nil {
				tt.Fatalf("Failed to get messages: %v", err)
			}
			if len(messages) == 0 {
				tt.Fatal("Expected messages, got none")
			}
			for _, msg := range messages {
				if msg.ConversationID != cid {
					tt.Errorf("Expected conversation ID %d, got %d", cid, msg.ConversationID)
				}
			}
			tt.Logf("Retrieved %d messages for conversation ID %d", len(messages), cid)
			if len(messages) < 5 {
				tt.Errorf("Expected at least 5 messages, got %d", len(messages))
			}
		},
	)
}
