// Code generated by schema2code at 2025-06-11 16:13:28. DO NOT EDIT.

package models

import (
	"time"
)

type MemoryFragment struct {
	ID      int    `json:"id"`      // Unique identifier for the memory fragment
	Role    string `json:"role"`    // Role of the message (e.g., 'user', 'assistant')
	Content string `json:"content"` // Content of the message
}

// MemorySource Source type of the memory
type MemorySource string

const (
	MemorySourceSummary MemorySource = "summary"
	MemorySourceMessage MemorySource = "message"
)
// Memory Memory represents a grouped memory for a user, which can be a summary or a question-answer pair
type Memory struct {
	Fragments      []MemoryFragment `json:"fragments"`       // Fragments of memory content
	Source         MemorySource     `json:"source"`          // Source type of the memory
	CreatedAt      time.Time        `json:"created_at"`      // Timestamp of when the memory was created
	Similarity     float32          `json:"similarity"`      // Similarity score from vector search
	SourceID       int              `json:"source_id"`       // Id of the source document or conversation
	ConversationID *int             `json:"conversation_id"` // Id of the conversation this memory belongs to
}
