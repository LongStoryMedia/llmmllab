# Code generated by schema2code at 2025-07-18 21:27:40. DO NOT EDIT.


from typing import List, Dict, Optional, Any, Union
from datetime import datetime, date, time, timedelta
from pydantic import BaseModel, Field, AnyUrl, EmailStr



"""Parameters for configuring a language model"""
class ModelParameters(BaseModel):
    # Size of the context window
    num_ctx: Optional[int] = None
    # Number of tokens to consider for repetition penalties
    repeat_last_n: Optional[int] = None
    # Penalty for repetitions
    repeat_penalty: Optional[float] = None
    # Sampling temperature; higher values produce more creative outputs
    temperature: Optional[float] = None
    # Random seed for reproducibility
    seed: Optional[int] = None
    # Sequences where the model should stop generating
    stop: Optional[List[str]] = None
    # Maximum number of tokens to predict
    num_predict: Optional[int] = None
    # Limits next token selection to top K options
    top_k: Optional[int] = None
    # Limits next token selection to tokens comprising the top P probability mass (nucleus sampling)
    top_p: Optional[float] = None
    # Minimum probability threshold for token selection
    min_p: Optional[float] = None

    class Config:
        extra = "ignore"