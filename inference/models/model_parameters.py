# Code generated by schema2code at 2025-08-05 21:51:07. DO NOT EDIT.


from typing import List, Dict, Optional, Any, Union
from datetime import datetime, date, time, timedelta
from pydantic import BaseModel, Field, AnyUrl, EmailStr



"""Parameters for configuring a language model"""
class ModelParameters(BaseModel):
    # Size of the context window
    num_ctx: Optional[int] = Field(default=None, description="Size of the context window")
    # Number of tokens to consider for repetition penalties
    repeat_last_n: Optional[int] = Field(default=None, description="Number of tokens to consider for repetition penalties")
    # Penalty for repetitions
    repeat_penalty: Optional[float] = Field(default=None, description="Penalty for repetitions")
    # Sampling temperature; higher values produce more creative outputs
    temperature: Optional[float] = Field(default=None, description="Sampling temperature; higher values produce more creative outputs")
    # Random seed for reproducibility
    seed: Optional[int] = Field(default=None, description="Random seed for reproducibility")
    # Sequences where the model should stop generating
    stop: Optional[List[str]] = Field(default=None, description="Sequences where the model should stop generating")
    # Maximum number of tokens to predict
    num_predict: Optional[int] = Field(default=None, description="Maximum number of tokens to predict")
    # Limits next token selection to top K options
    top_k: Optional[int] = Field(default=None, description="Limits next token selection to top K options")
    # Limits next token selection to tokens comprising the top P probability mass (nucleus sampling)
    top_p: Optional[float] = Field(default=None, description="Limits next token selection to tokens comprising the top P probability mass (nucleus sampling)")
    # Minimum probability threshold for token selection
    min_p: Optional[float] = Field(default=None, description="Minimum probability threshold for token selection")

    class Config:
        extra = "ignore"